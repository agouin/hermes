name: Rust
on:
  pull_request:
    paths:
      - .github/workflows/integration.yaml
      - Cargo.toml
      - Cargo.lock
      - flake.nix
      - flake.lock
      - ci/**
      - e2e/**
      - crates/**
      - tools/**
  push:
    branches: master
    paths:
      - .github/workflows/integration.yaml
      - Cargo.toml
      - Cargo.lock
      - flake.nix
      - flake.lock
      - ci/**
      - e2e/**
      - crates/**
      - tools/**

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  CARGO_PROFILE_DEV_DEBUG: 1
  CARGO_PROFILE_RELEASE_DEBUG: 1
  CARGO_TERM_COLOR: always
  RUSTUP_MAX_RETRIES: 10
  RUST_BACKTRACE: short
  NEXTEST_RETRIES: 1

jobs:
  build-test-artifacts:
    name: Build test artifacts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Install nextest
        uses: taiki-e/install-action@nextest
      - name: Build and archive tests
        run: cargo nextest archive --archive-file nextest-archive.tar.zst
      - name: Upload archive to workflow
        uses: actions/upload-artifact@v3
        with:
          name: nextest-archive
          path: nextest-archive.tar.zst

  integration-test:
    runs-on: ubuntu-latest
    needs: build-test-artifacts
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        partition: [1, 2, 3, 4]
        chain:
          - package: gaia6
            command: gaiad
            account_prefix: cosmos
          - package: gaia7
            command: gaiad
            account_prefix: cosmos
          - package: ibc-go-v2-simapp
            command: simd
            account_prefix: cosmos
          - package: ibc-go-v3-simapp
            command: simd
            account_prefix: cosmos
          - package: ibc-go-v4-simapp
            command: simd
            account_prefix: cosmos
          - package: ibc-go-v5-simapp
            command: simd
            account_prefix: cosmos
          - package: ibc-go-v6-simapp
            command: simd
            account_prefix: cosmos
          - package: wasmd
            command: wasmd
            account_prefix: wasm
          - package: evmos
            command: evmosd
            account_prefix: evmos
          - package: osmosis
            command: osmosisd
            account_prefix: osmo

    steps:
      - uses: actions/checkout@v2
      - uses: cachix/install-nix-action@v15
        with:
          install_url: https://nixos-nix-install-tests.cachix.org/serve/vij683ly7sl95nnhb67bdjjfabclr85m/install
          install_options: '--tarball-url-prefix https://nixos-nix-install-tests.cachix.org/serve'
          extra_nix_config: |
            experimental-features = nix-command flakes
      - uses: cachix/cachix-action@v10
        with:
          name: cosmos
      - run: mkdir -p ~/.cargo/bin
      - uses: taiki-e/install-action@nextest
      - name: Download archive
        uses: actions/download-artifact@v3
        with:
          name: nextest-archive
      - env:
          RUST_LOG: info
          RUST_BACKTRACE: 1
          NO_COLOR_LOG: 1
          CHAIN_COMMAND_PATH: ${{ matrix.chain.command }}
          ACCOUNT_PREFIX: ${{ matrix.chain.account_prefix }}
        run: |
          nix shell .#python .#${{ matrix.chain.package }} -c  ~/.cargo/bin/cargo-nextest \
            nextest run -p ibc-integration-test --no-fail-fast --no-capture \
              --partition count:${{ matrix.partition }}/4

  ordered-channel-test:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v2
      - uses: cachix/install-nix-action@v15
        with:
          install_url: https://nixos-nix-install-tests.cachix.org/serve/vij683ly7sl95nnhb67bdjjfabclr85m/install
          install_options: '--tarball-url-prefix https://nixos-nix-install-tests.cachix.org/serve'
          extra_nix_config: |
            experimental-features = nix-command flakes
      - uses: cachix/cachix-action@v10
        with:
          name: cosmos
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v1
      - uses: taiki-e/install-action@nextest
      - env:
          RUST_LOG: info
          RUST_BACKTRACE: 1
          NO_COLOR_LOG: 1
        run: |
          nix shell .#python .#gaia6-ordered -c cargo \
            nextest run -p ibc-integration-test --features ordered --no-fail-fast --no-capture \
              test_ordered_channel

  ica-filter-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: cachix/install-nix-action@v15
        with:
          install_url: https://nixos-nix-install-tests.cachix.org/serve/vij683ly7sl95nnhb67bdjjfabclr85m/install
          install_options: '--tarball-url-prefix https://nixos-nix-install-tests.cachix.org/serve'
          extra_nix_config: |
            experimental-features = nix-command flakes
      - uses: cachix/cachix-action@v10
        with:
          name: cosmos
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v1
      - uses: taiki-e/install-action@nextest
      - env:
          RUST_LOG: info
          RUST_BACKTRACE: 1
          NO_COLOR_LOG: 1
          CHAIN_COMMAND_PATH: icad
        run: |
          nix shell .#python .#ica -c cargo \
            nextest run -p ibc-integration-test --features ica --no-fail-fast --no-capture \
              test_ica_filter

  ics29-fee-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        chain:
          - package: ibc-go-v5-simapp
            command: simd
            account_prefix: cosmos
          - package: ibc-go-v6-simapp
            command: simd
            account_prefix: cosmos
    steps:
      - uses: actions/checkout@v2
      - uses: cachix/install-nix-action@v15
        with:
          install_url: https://nixos-nix-install-tests.cachix.org/serve/vij683ly7sl95nnhb67bdjjfabclr85m/install
          install_options: '--tarball-url-prefix https://nixos-nix-install-tests.cachix.org/serve'
          extra_nix_config: |
            experimental-features = nix-command flakes
      - uses: cachix/cachix-action@v10
        with:
          name: cosmos
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v1
      - uses: taiki-e/install-action@nextest
      - env:
          RUST_LOG: info
          RUST_BACKTRACE: 1
          NO_COLOR_LOG: 1
          CHAIN_COMMAND_PATH: ${{ matrix.chain.command }}
          ACCOUNT_PREFIX: ${{ matrix.chain.account_prefix }}
        run: |
          nix shell .#${{ matrix.chain.package }} -c cargo \
            nextest run -p ibc-integration-test --features ics29-fee --no-fail-fast --no-capture \
              fee::

  model-based-test:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      matrix:
        gaiad:
          - gaia6
    steps:
      - uses: actions/checkout@v2
      - uses: cachix/install-nix-action@v15
        with:
          install_url: https://nixos-nix-install-tests.cachix.org/serve/vij683ly7sl95nnhb67bdjjfabclr85m/install
          install_options: '--tarball-url-prefix https://nixos-nix-install-tests.cachix.org/serve'
          extra_nix_config: |
            experimental-features = nix-command flakes
      - uses: cachix/cachix-action@v10
        with:
          name: cosmos
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v1
      - uses: taiki-e/install-action@nextest
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: run -p ibc-integration-test --features mbt --no-run

      # Disable running MBT tests until flakiness is addressed
      # - env:
      #     RUST_LOG: debug
      #     RUST_BACKTRACE: 1
      #     NO_COLOR_LOG: 1
      #   run: |
      #     nix shell \
      #       .#${{ matrix.gaiad }} \
      #       .#apalache \
      #       -c cargo \
      #       nextest run -p ibc-integration-test --features mbt --no-fail-fast --no-capture \
      #         mbt
